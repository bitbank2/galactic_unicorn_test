// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ---------------- //
// galactic_unicorn //
// ---------------- //

#define galactic_unicorn_wrap_target 0
#define galactic_unicorn_wrap 23

static const uint16_t galactic_unicorn_program_instructions[] = {
            //     .wrap_target
    0x6048, //  0: out    y, 8                       
    0x7121, //  1: out    x, 1            side 0 [1] 
    0xe004, //  2: set    pins, 4                    
    0x0025, //  3: jmp    !x, 5                      
    0xe005, //  4: set    pins, 5                    
    0xba42, //  5: nop                    side 1 [2] 
    0x7121, //  6: out    x, 1            side 0 [1] 
    0xe004, //  7: set    pins, 4                    
    0x002a, //  8: jmp    !x, 10                     
    0xe005, //  9: set    pins, 5                    
    0xba42, // 10: nop                    side 1 [2] 
    0x7121, // 11: out    x, 1            side 0 [1] 
    0xe004, // 12: set    pins, 4                    
    0x002f, // 13: jmp    !x, 15                     
    0xe005, // 14: set    pins, 5                    
    0x7a65, // 15: out    null, 5         side 1 [2] 
    0x0081, // 16: jmp    y--, 1                     
    0x6070, // 17: out    null, 16                   
    0x6008, // 18: out    pins, 8                    
    0xe506, // 19: set    pins, 6                [5] 
    0xe000, // 20: set    pins, 0                    
    0x6058, // 21: out    y, 24                      
    0x0096, // 22: jmp    y--, 22                    
    0xe004, // 23: set    pins, 4                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program galactic_unicorn_program = {
    .instructions = galactic_unicorn_program_instructions,
    .length = 24,
    .origin = -1,
};

static inline pio_sm_config galactic_unicorn_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + galactic_unicorn_wrap_target, offset + galactic_unicorn_wrap);
    sm_config_set_sideset(&c, 2, true, false);
    return c;
}
#endif

